// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file member.proto (package discordpackage, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum discordpackage.GrpcMemberRole
 */
export enum GrpcMemberRole {
  /**
   * @generated from enum value: MEMBER_ROLE_UNSPECIFIED = 0;
   */
  MEMBER_ROLE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_ROLE_ADMIN = 1;
   */
  MEMBER_ROLE_ADMIN = 1,

  /**
   * @generated from enum value: MEMBER_ROLE_MODERATOR = 2;
   */
  MEMBER_ROLE_MODERATOR = 2,

  /**
   * @generated from enum value: MEMBER_ROLE_GUEST = 3;
   */
  MEMBER_ROLE_GUEST = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GrpcMemberRole)
proto3.util.setEnumType(GrpcMemberRole, "discordpackage.GrpcMemberRole", [
  { no: 0, name: "MEMBER_ROLE_UNSPECIFIED" },
  { no: 1, name: "MEMBER_ROLE_ADMIN" },
  { no: 2, name: "MEMBER_ROLE_MODERATOR" },
  { no: 3, name: "MEMBER_ROLE_GUEST" },
]);

/**
 * @generated from message discordpackage.GrpcMemberProfile
 */
export class GrpcMemberProfile extends Message<GrpcMemberProfile> {
  /**
   * @generated from field: optional string member_id = 1;
   */
  memberId?: string;

  /**
   * @generated from field: optional discordpackage.GrpcMemberRole role = 2;
   */
  role?: GrpcMemberRole;

  /**
   * @generated from field: optional string server_id = 3;
   */
  serverId?: string;

  /**
   * @generated from field: optional string join_at = 4;
   */
  joinAt?: string;

  /**
   * @generated from field: string profile_id = 5;
   */
  profileId = "";

  /**
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * @generated from field: optional string avt_url = 7;
   */
  avtUrl?: string;

  constructor(data?: PartialMessage<GrpcMemberProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "discordpackage.GrpcMemberProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "role", kind: "enum", T: proto3.getEnumType(GrpcMemberRole), opt: true },
    { no: 3, name: "server_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "join_at", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "avt_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMemberProfile {
    return new GrpcMemberProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMemberProfile {
    return new GrpcMemberProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMemberProfile {
    return new GrpcMemberProfile().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMemberProfile | PlainMessage<GrpcMemberProfile> | undefined, b: GrpcMemberProfile | PlainMessage<GrpcMemberProfile> | undefined): boolean {
    return proto3.util.equals(GrpcMemberProfile, a, b);
  }
}

