// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file event.proto (package eventpackage, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message eventpackage.GrpcEvent
 */
export class GrpcEvent extends Message<GrpcEvent> {
  /**
   * @generated from oneof eventpackage.GrpcEvent.event
   */
  event: {
    /**
     * @generated from field: eventpackage.GrpcMessageEvent message_event = 1;
     */
    value: GrpcMessageEvent;
    case: "messageEvent";
  } | {
    /**
     * @generated from field: eventpackage.GrpcMemberEvent member_event = 2;
     */
    value: GrpcMemberEvent;
    case: "memberEvent";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message_event", kind: "message", T: GrpcMessageEvent, oneof: "event" },
    { no: 2, name: "member_event", kind: "message", T: GrpcMemberEvent, oneof: "event" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcEvent {
    return new GrpcEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcEvent {
    return new GrpcEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcEvent {
    return new GrpcEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcEvent | PlainMessage<GrpcEvent> | undefined, b: GrpcEvent | PlainMessage<GrpcEvent> | undefined): boolean {
    return proto3.util.equals(GrpcEvent, a, b);
  }
}

/**
 * @generated from message eventpackage.GrpcMessageEvent
 */
export class GrpcMessageEvent extends Message<GrpcMessageEvent> {
  /**
   * @generated from field: eventpackage.GrpcMessageEvent.GrpcMessageEventType type = 1;
   */
  type = GrpcMessageEvent_GrpcMessageEventType.MESSAGE_EVENT_TYPE_UNSPECIFIED;

  /**
   * @generated from field: eventpackage.GrpcMessageEvent.GrpcMessage data = 2;
   */
  data?: GrpcMessageEvent_GrpcMessage;

  constructor(data?: PartialMessage<GrpcMessageEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMessageEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(GrpcMessageEvent_GrpcMessageEventType) },
    { no: 2, name: "data", kind: "message", T: GrpcMessageEvent_GrpcMessage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMessageEvent {
    return new GrpcMessageEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMessageEvent {
    return new GrpcMessageEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMessageEvent {
    return new GrpcMessageEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMessageEvent | PlainMessage<GrpcMessageEvent> | undefined, b: GrpcMessageEvent | PlainMessage<GrpcMessageEvent> | undefined): boolean {
    return proto3.util.equals(GrpcMessageEvent, a, b);
  }
}

/**
 * @generated from enum eventpackage.GrpcMessageEvent.GrpcMessageEventType
 */
export enum GrpcMessageEvent_GrpcMessageEventType {
  /**
   * @generated from enum value: MESSAGE_EVENT_TYPE_UNSPECIFIED = 0;
   */
  MESSAGE_EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MESSAGE_EVENT_TYPE_ADD = 1;
   */
  MESSAGE_EVENT_TYPE_ADD = 1,

  /**
   * @generated from enum value: MESSAGE_EVENT_TYPE_EDIT = 2;
   */
  MESSAGE_EVENT_TYPE_EDIT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(GrpcMessageEvent_GrpcMessageEventType)
proto3.util.setEnumType(GrpcMessageEvent_GrpcMessageEventType, "eventpackage.GrpcMessageEvent.GrpcMessageEventType", [
  { no: 0, name: "MESSAGE_EVENT_TYPE_UNSPECIFIED" },
  { no: 1, name: "MESSAGE_EVENT_TYPE_ADD" },
  { no: 2, name: "MESSAGE_EVENT_TYPE_EDIT" },
]);

/**
 * @generated from enum eventpackage.GrpcMessageEvent.GrpcMemberRole
 */
export enum GrpcMessageEvent_GrpcMemberRole {
  /**
   * @generated from enum value: MEMBER_ROLE_UNSPECIFIED = 0;
   */
  MEMBER_ROLE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_ROLE_ADMIN = 1;
   */
  MEMBER_ROLE_ADMIN = 1,

  /**
   * @generated from enum value: MEMBER_ROLE_MODERATOR = 2;
   */
  MEMBER_ROLE_MODERATOR = 2,

  /**
   * @generated from enum value: MEMBER_ROLE_GUEST = 3;
   */
  MEMBER_ROLE_GUEST = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GrpcMessageEvent_GrpcMemberRole)
proto3.util.setEnumType(GrpcMessageEvent_GrpcMemberRole, "eventpackage.GrpcMessageEvent.GrpcMemberRole", [
  { no: 0, name: "MEMBER_ROLE_UNSPECIFIED" },
  { no: 1, name: "MEMBER_ROLE_ADMIN" },
  { no: 2, name: "MEMBER_ROLE_MODERATOR" },
  { no: 3, name: "MEMBER_ROLE_GUEST" },
]);

/**
 * @generated from message eventpackage.GrpcMessageEvent.GrpcMemberProfile
 */
export class GrpcMessageEvent_GrpcMemberProfile extends Message<GrpcMessageEvent_GrpcMemberProfile> {
  /**
   * @generated from field: optional string member_id = 1;
   */
  memberId?: string;

  /**
   * @generated from field: optional eventpackage.GrpcMessageEvent.GrpcMemberRole role = 2;
   */
  role?: GrpcMessageEvent_GrpcMemberRole;

  /**
   * @generated from field: optional string server_id = 3;
   */
  serverId?: string;

  /**
   * @generated from field: optional string join_at = 4;
   */
  joinAt?: string;

  /**
   * @generated from field: string profile_id = 5;
   */
  profileId = "";

  /**
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * @generated from field: optional string avt_url = 7;
   */
  avtUrl?: string;

  constructor(data?: PartialMessage<GrpcMessageEvent_GrpcMemberProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMessageEvent.GrpcMemberProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "role", kind: "enum", T: proto3.getEnumType(GrpcMessageEvent_GrpcMemberRole), opt: true },
    { no: 3, name: "server_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "join_at", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "avt_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMessageEvent_GrpcMemberProfile {
    return new GrpcMessageEvent_GrpcMemberProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMessageEvent_GrpcMemberProfile {
    return new GrpcMessageEvent_GrpcMemberProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMessageEvent_GrpcMemberProfile {
    return new GrpcMessageEvent_GrpcMemberProfile().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMessageEvent_GrpcMemberProfile | PlainMessage<GrpcMessageEvent_GrpcMemberProfile> | undefined, b: GrpcMessageEvent_GrpcMemberProfile | PlainMessage<GrpcMessageEvent_GrpcMemberProfile> | undefined): boolean {
    return proto3.util.equals(GrpcMessageEvent_GrpcMemberProfile, a, b);
  }
}

/**
 * @generated from message eventpackage.GrpcMessageEvent.GrpcMessage
 */
export class GrpcMessageEvent_GrpcMessage extends Message<GrpcMessageEvent_GrpcMessage> {
  /**
   * @generated from field: string message_id = 1;
   */
  messageId = "";

  /**
   * @generated from field: optional string content = 2;
   */
  content?: string;

  /**
   * @generated from field: optional string file_url = 3;
   */
  fileUrl?: string;

  /**
   * @generated from field: string channel_id = 4;
   */
  channelId = "";

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt = "";

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt = "";

  /**
   * @generated from field: optional string deleted_at = 7;
   */
  deletedAt?: string;

  /**
   * @generated from field: optional string deleted_by = 8;
   */
  deletedBy?: string;

  /**
   * @generated from field: eventpackage.GrpcMessageEvent.GrpcMemberProfile author = 9;
   */
  author?: GrpcMessageEvent_GrpcMemberProfile;

  constructor(data?: PartialMessage<GrpcMessageEvent_GrpcMessage>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMessageEvent.GrpcMessage";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "file_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "deleted_at", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "deleted_by", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "author", kind: "message", T: GrpcMessageEvent_GrpcMemberProfile },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMessageEvent_GrpcMessage {
    return new GrpcMessageEvent_GrpcMessage().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMessageEvent_GrpcMessage {
    return new GrpcMessageEvent_GrpcMessage().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMessageEvent_GrpcMessage {
    return new GrpcMessageEvent_GrpcMessage().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMessageEvent_GrpcMessage | PlainMessage<GrpcMessageEvent_GrpcMessage> | undefined, b: GrpcMessageEvent_GrpcMessage | PlainMessage<GrpcMessageEvent_GrpcMessage> | undefined): boolean {
    return proto3.util.equals(GrpcMessageEvent_GrpcMessage, a, b);
  }
}

/**
 * @generated from message eventpackage.GrpcMemberEvent
 */
export class GrpcMemberEvent extends Message<GrpcMemberEvent> {
  /**
   * @generated from field: eventpackage.GrpcMemberEvent.GrpcMemberEventType type = 1;
   */
  type = GrpcMemberEvent_GrpcMemberEventType.MEMBER_EVENT_TYPE_UNSPECIFIED;

  /**
   * @generated from oneof eventpackage.GrpcMemberEvent.data
   */
  data: {
    /**
     * @generated from field: eventpackage.GrpcMemberEvent.GrpcAddMemberEvent add_member_event = 2;
     */
    value: GrpcMemberEvent_GrpcAddMemberEvent;
    case: "addMemberEvent";
  } | {
    /**
     * @generated from field: eventpackage.GrpcMemberEvent.GrpcEditMemberEvent edit_member_event = 3;
     */
    value: GrpcMemberEvent_GrpcEditMemberEvent;
    case: "editMemberEvent";
  } | {
    /**
     * @generated from field: eventpackage.GrpcMemberEvent.GrpcDeleteMemberEvent delete_member_event = 4;
     */
    value: GrpcMemberEvent_GrpcDeleteMemberEvent;
    case: "deleteMemberEvent";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GrpcMemberEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMemberEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(GrpcMemberEvent_GrpcMemberEventType) },
    { no: 2, name: "add_member_event", kind: "message", T: GrpcMemberEvent_GrpcAddMemberEvent, oneof: "data" },
    { no: 3, name: "edit_member_event", kind: "message", T: GrpcMemberEvent_GrpcEditMemberEvent, oneof: "data" },
    { no: 4, name: "delete_member_event", kind: "message", T: GrpcMemberEvent_GrpcDeleteMemberEvent, oneof: "data" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMemberEvent {
    return new GrpcMemberEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMemberEvent {
    return new GrpcMemberEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMemberEvent {
    return new GrpcMemberEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMemberEvent | PlainMessage<GrpcMemberEvent> | undefined, b: GrpcMemberEvent | PlainMessage<GrpcMemberEvent> | undefined): boolean {
    return proto3.util.equals(GrpcMemberEvent, a, b);
  }
}

/**
 * @generated from enum eventpackage.GrpcMemberEvent.GrpcMemberEventType
 */
export enum GrpcMemberEvent_GrpcMemberEventType {
  /**
   * @generated from enum value: MEMBER_EVENT_TYPE_UNSPECIFIED = 0;
   */
  MEMBER_EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_EVENT_TYPE_ADD = 1;
   */
  MEMBER_EVENT_TYPE_ADD = 1,

  /**
   * @generated from enum value: MEMBER_EVENT_TYPE_EDIT = 2;
   */
  MEMBER_EVENT_TYPE_EDIT = 2,

  /**
   * @generated from enum value: MEMBER_EVENT_DELETE = 3;
   */
  MEMBER_EVENT_DELETE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GrpcMemberEvent_GrpcMemberEventType)
proto3.util.setEnumType(GrpcMemberEvent_GrpcMemberEventType, "eventpackage.GrpcMemberEvent.GrpcMemberEventType", [
  { no: 0, name: "MEMBER_EVENT_TYPE_UNSPECIFIED" },
  { no: 1, name: "MEMBER_EVENT_TYPE_ADD" },
  { no: 2, name: "MEMBER_EVENT_TYPE_EDIT" },
  { no: 3, name: "MEMBER_EVENT_DELETE" },
]);

/**
 * @generated from enum eventpackage.GrpcMemberEvent.GrpcMemberRole
 */
export enum GrpcMemberEvent_GrpcMemberRole {
  /**
   * @generated from enum value: MEMBER_ROLE_UNSPECIFIED = 0;
   */
  MEMBER_ROLE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MEMBER_ROLE_ADMIN = 1;
   */
  MEMBER_ROLE_ADMIN = 1,

  /**
   * @generated from enum value: MEMBER_ROLE_MODERATOR = 2;
   */
  MEMBER_ROLE_MODERATOR = 2,

  /**
   * @generated from enum value: MEMBER_ROLE_GUEST = 3;
   */
  MEMBER_ROLE_GUEST = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(GrpcMemberEvent_GrpcMemberRole)
proto3.util.setEnumType(GrpcMemberEvent_GrpcMemberRole, "eventpackage.GrpcMemberEvent.GrpcMemberRole", [
  { no: 0, name: "MEMBER_ROLE_UNSPECIFIED" },
  { no: 1, name: "MEMBER_ROLE_ADMIN" },
  { no: 2, name: "MEMBER_ROLE_MODERATOR" },
  { no: 3, name: "MEMBER_ROLE_GUEST" },
]);

/**
 * @generated from message eventpackage.GrpcMemberEvent.GrpcAddMemberEvent
 */
export class GrpcMemberEvent_GrpcAddMemberEvent extends Message<GrpcMemberEvent_GrpcAddMemberEvent> {
  /**
   * @generated from field: string member_id = 1;
   */
  memberId = "";

  /**
   * @generated from field: eventpackage.GrpcMemberEvent.GrpcMemberRole role = 2;
   */
  role = GrpcMemberEvent_GrpcMemberRole.MEMBER_ROLE_UNSPECIFIED;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId = "";

  /**
   * @generated from field: string join_at = 4;
   */
  joinAt = "";

  /**
   * @generated from field: string profile_id = 5;
   */
  profileId = "";

  /**
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * @generated from field: optional string avt_url = 7;
   */
  avtUrl?: string;

  constructor(data?: PartialMessage<GrpcMemberEvent_GrpcAddMemberEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMemberEvent.GrpcAddMemberEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role", kind: "enum", T: proto3.getEnumType(GrpcMemberEvent_GrpcMemberRole) },
    { no: 3, name: "server_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "join_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "profile_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "avt_url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMemberEvent_GrpcAddMemberEvent {
    return new GrpcMemberEvent_GrpcAddMemberEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcAddMemberEvent {
    return new GrpcMemberEvent_GrpcAddMemberEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcAddMemberEvent {
    return new GrpcMemberEvent_GrpcAddMemberEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMemberEvent_GrpcAddMemberEvent | PlainMessage<GrpcMemberEvent_GrpcAddMemberEvent> | undefined, b: GrpcMemberEvent_GrpcAddMemberEvent | PlainMessage<GrpcMemberEvent_GrpcAddMemberEvent> | undefined): boolean {
    return proto3.util.equals(GrpcMemberEvent_GrpcAddMemberEvent, a, b);
  }
}

/**
 * @generated from message eventpackage.GrpcMemberEvent.GrpcEditMemberEvent
 */
export class GrpcMemberEvent_GrpcEditMemberEvent extends Message<GrpcMemberEvent_GrpcEditMemberEvent> {
  /**
   * @generated from field: string member_id = 1;
   */
  memberId = "";

  /**
   * @generated from field: eventpackage.GrpcMemberEvent.GrpcMemberRole role = 2;
   */
  role = GrpcMemberEvent_GrpcMemberRole.MEMBER_ROLE_UNSPECIFIED;

  constructor(data?: PartialMessage<GrpcMemberEvent_GrpcEditMemberEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMemberEvent.GrpcEditMemberEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role", kind: "enum", T: proto3.getEnumType(GrpcMemberEvent_GrpcMemberRole) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMemberEvent_GrpcEditMemberEvent {
    return new GrpcMemberEvent_GrpcEditMemberEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcEditMemberEvent {
    return new GrpcMemberEvent_GrpcEditMemberEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcEditMemberEvent {
    return new GrpcMemberEvent_GrpcEditMemberEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMemberEvent_GrpcEditMemberEvent | PlainMessage<GrpcMemberEvent_GrpcEditMemberEvent> | undefined, b: GrpcMemberEvent_GrpcEditMemberEvent | PlainMessage<GrpcMemberEvent_GrpcEditMemberEvent> | undefined): boolean {
    return proto3.util.equals(GrpcMemberEvent_GrpcEditMemberEvent, a, b);
  }
}

/**
 * @generated from message eventpackage.GrpcMemberEvent.GrpcDeleteMemberEvent
 */
export class GrpcMemberEvent_GrpcDeleteMemberEvent extends Message<GrpcMemberEvent_GrpcDeleteMemberEvent> {
  /**
   * @generated from field: string member_id = 1;
   */
  memberId = "";

  constructor(data?: PartialMessage<GrpcMemberEvent_GrpcDeleteMemberEvent>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "eventpackage.GrpcMemberEvent.GrpcDeleteMemberEvent";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "member_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GrpcMemberEvent_GrpcDeleteMemberEvent {
    return new GrpcMemberEvent_GrpcDeleteMemberEvent().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcDeleteMemberEvent {
    return new GrpcMemberEvent_GrpcDeleteMemberEvent().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GrpcMemberEvent_GrpcDeleteMemberEvent {
    return new GrpcMemberEvent_GrpcDeleteMemberEvent().fromJsonString(jsonString, options);
  }

  static equals(a: GrpcMemberEvent_GrpcDeleteMemberEvent | PlainMessage<GrpcMemberEvent_GrpcDeleteMemberEvent> | undefined, b: GrpcMemberEvent_GrpcDeleteMemberEvent | PlainMessage<GrpcMemberEvent_GrpcDeleteMemberEvent> | undefined): boolean {
    return proto3.util.equals(GrpcMemberEvent_GrpcDeleteMemberEvent, a, b);
  }
}

